{
  "sections": {
    "image_banner": {
      "type": "image-banner",
      "blocks": {
        "heading": {
          "type": "heading",
          "settings": {
            "heading": "REBELIOUS BY NATURE",
            "heading_size": "h0"
          }
        },
        "text": {
          "type": "text",
          "settings": {
            "text": "Here is some body text",
            "text_style": "subtitle"
          }
        },
        "button": {
          "type": "buttons",
          "settings": {
            "button_label_1": "Shop all",
            "button_link_1": "shopify:\/\/collections\/all",
            "button_style_secondary_1": false,
            "button_label_2": "",
            "button_link_2": "",
            "button_style_secondary_2": false
          }
        }
      },
      "block_order": [
        "heading",
        "text",
        "button"
      ],
      "settings": {
        "image_overlay_opacity": 0,
        "image_height": "medium",
        "desktop_content_position": "bottom-left",
        "show_text_box": false,
        "desktop_content_alignment": "left",
        "color_scheme": "inverse",
        "image_behavior": "ambient",
        "mobile_content_alignment": "center",
        "stack_images_on_mobile": false,
        "show_text_below": true,
        "twcss_heading": "",
        "twcss_body": "",
        "twcss_button": "twcss-bg-red-500 twcss-text-white"
      }
    },
    "featured_collection": {
      "type": "featured-collection",
      "disabled": true,
      "settings": {
        "title": "Featured products",
        "heading_size": "h2",
        "description": "",
        "show_description": false,
        "description_style": "body",
        "collection": "death-wish",
        "products_to_show": 8,
        "columns_desktop": 3,
        "full_width": false,
        "show_view_all": false,
        "view_all_style": "solid",
        "enable_desktop_slider": true,
        "color_scheme": "background-1",
        "image_ratio": "adapt",
        "image_shape": "default",
        "show_secondary_image": true,
        "show_vendor": false,
        "show_rating": false,
        "enable_quick_add": false,
        "columns_mobile": "2",
        "swipe_on_mobile": false,
        "padding_top": 28,
        "padding_bottom": 36,
        "twcss_heading": "",
        "twcss_description": ""
      }
    },
    "7127aa0f-7992-428a-b35f-0465d220a392": {
      "type": "custom-liquid",
      "settings": {
        "custom_liquid": "<div id=\"game\">Grind(swipe) as many Beans as you can without Hitting a Skull! <\/div>\n<style>\ndiv#game {\n    width:100vw;\n    height:100vh;\n  background:#000;\n  color:#fff;\n}\n<\/style>\n<script  type=\"text\/javascript\" src=\"\/\/cdnjs.cloudflare.com\/ajax\/libs\/phaser\/2.0.6\/phaser.min.js\"><\/script>\n<script type=\"text\/javascript\">\n\ndocument.getElementsByClassName(\"one\").ClassName = \"two\";\ndocument.getElementsByClassName(\"two\").ClassName = \"one\";\n\nvar w = window.innerWidth,\n\t\th = window.innerHeight;\n\nvar game = new Phaser.Game(w, h, Phaser.AUTO, 'game',\n\t\t{ preload: preload, create: create, update: update, render: render });\n\nfunction preload() {\n  this.load.image('toast', 'https:\/\/images.accentuate.io?c_options=w_575&image=https:\/\/cdn.accentuate.io\/2717209\/1620684399374\/group-440.svg?v=0');\n  this.load.image('burnt', 'https:\/\/images.accentuate.io?c_options=w_575&image=https:\/\/cdn.accentuate.io\/2717209\/1620684399374\/group-440.svg?v=0');\n  this.load.image('toaster', 'https:\/\/images.accentuate.io?c_options=w_575&image=https:\/\/cdn.accentuate.io\/2717209\/1620684399374\/group-440.svg?v=0');\n  \n\tvar bmd = game.add.bitmapData(100,100);\n\tbmd.ctx.fillStyle = 'brown';\n\tbmd.ctx.arc(50,50,50, 0, Math.PI * 2);\n\tbmd.ctx.fill();\n\tgame.cache.addBitmapData('good', bmd);\n\n\tvar bmd = game.add.bitmapData(44,44);\n\tbmd.ctx.fillStyle = 'white';\n\tbmd.ctx.arc(22,22,22, 0, Math.PI * 2);\n\tbmd.ctx.fill();\n\tgame.cache.addBitmapData('bad', bmd);\n}\n\nvar good_objects,\n\t\tbad_objects,\n\t\tslashes,\n\t\tline,\n\t\tscoreLabel,\n\t\tscore = 0,\n\t\tpoints = [];\t\n\nvar fireRate = 1000;\nvar nextFire = 0;\n\n\nfunction create() {\n  \n  \/\/this.add.image(400, 300, 'toast');\n\n\tgame.physics.startSystem(Phaser.Physics.ARCADE);\n\tgame.physics.arcade.gravity.y = 300;\n\n\tgood_objects = createGroup(4, game.cache.getBitmapData('good'));\n\tbad_objects = createGroup(4, game.cache.getBitmapData('bad'));\n\n\tslashes = game.add.graphics(0, 0);\n\n\tscoreLabel = game.add.text(10,10,'Tip: move your finger or mouse over the beans!');\n\tscoreLabel.fill = 'white';\n\n\temitter = game.add.emitter(0, 0, 300);\n\temitter.makeParticles('parts');\n\temitter.gravity = 300;\n\temitter.setYSpeed(-400,400);\n\n\tthrowObject();\n}\n\nfunction createGroup (numItems, sprite) {\n\tvar group = game.add.group();\n\tgroup.enableBody = true;\n\tgroup.physicsBodyType = Phaser.Physics.ARCADE;\n\tgroup.createMultiple(numItems, sprite);\n\tgroup.setAll('checkWorldBounds', true);\n\tgroup.setAll('outOfBoundsKill', true);\n\treturn group;\n}\n\nfunction throwObject() {\n\tif (game.time.now > nextFire && good_objects.countDead()>0 && bad_objects.countDead()>0) {\n\t\tnextFire = game.time.now + fireRate;\n\t\tthrowGoodObject();\n\t\tif (Math.random()>.5) {\n\t\t\tthrowBadObject();\n\t\t}\n\t}\n}\n\nfunction throwGoodObject() {\n\tvar obj = good_objects.getFirstDead();\n\tobj.reset(game.world.centerX + Math.random()*100-Math.random()*100, 600);\n\tobj.anchor.setTo(0.5, 0.5);\n\t\/\/obj.body.angularAcceleration = 100;\n\tgame.physics.arcade.moveToXY(obj, game.world.centerX, game.world.centerY, 530);\n}\n\nfunction throwBadObject() {\n\tvar obj = bad_objects.getFirstDead();\n\tobj.reset(game.world.centerX + Math.random()*100-Math.random()*100, 600);\n\tobj.anchor.setTo(0.5, 0.5);\n\t\/\/obj.body.angularAcceleration = 100;\n\tgame.physics.arcade.moveToXY(obj, game.world.centerX, game.world.centerY, 530);\n}\n\nfunction update() {\n\tthrowObject();\n\n\tpoints.push({\n\t\tx: game.input.x,\n\t\ty: game.input.y\n\t});\n\tpoints = points.splice(points.length-10, points.length);\n\t\/\/game.add.sprite(game.input.x, game.input.y, 'hit');\n\n\tif (points.length<1 || points[0].x==0) {\n\t\treturn;\n\t}\n\n\tslashes.clear();\n\tslashes.beginFill(0xFFFFFF);\n\tslashes.alpha = .1;\n\tslashes.moveTo(points[0].x, points[0].y);\n\tfor (var i=1; i<points.length; i++) {\n\t\tslashes.lineTo(points[i].x, points[i].y);\n\t} \n\tslashes.endFill();\n\n\tfor(var i = 1; i< points.length; i++) {\n\t\tline = new Phaser.Line(points[i].x, points[i].y, points[i-1].x, points[i-1].y);\n\t\tgame.debug.geom(line);\n\n\t\tgood_objects.forEachExists(checkIntersects);\n\t\tbad_objects.forEachExists(checkIntersects);\n\t}\n}\n\nvar contactPoint = new Phaser.Point(0,0);\n\nfunction checkIntersects(fruit, callback) {\n\tvar l1 = new Phaser.Line(fruit.body.right - fruit.width, fruit.body.bottom - fruit.height, fruit.body.right, fruit.body.bottom);\n\tvar l2 = new Phaser.Line(fruit.body.right - fruit.width, fruit.body.bottom, fruit.body.right, fruit.body.bottom-fruit.height);\n\tl2.angle = 90;\n\n\tif(Phaser.Line.intersects(line, l1, true) ||\n\t\t Phaser.Line.intersects(line, l2, true)) {\n\n\t\tcontactPoint.x = game.input.x;\n\t\tcontactPoint.y = game.input.y;\n\t\tvar distance = Phaser.Point.distance(contactPoint, new Phaser.Point(fruit.x, fruit.y));\n\t\tif (Phaser.Point.distance(contactPoint, new Phaser.Point(fruit.x, fruit.y)) > 110) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (fruit.parent == good_objects) {\n\t\t\tkillFruit(fruit);\n\t\t} else {\n\t\t\tresetScore();\t\n\t\t}\n\t}\n\n}\n\nfunction resetScore() {\n\tvar highscore = Math.max(score, localStorage.getItem(\"highscore\"));\n\tlocalStorage.setItem(\"highscore\", highscore);\n\n\tgood_objects.forEachExists(killFruit);\n\tbad_objects.forEachExists(killFruit);\n\n\tscore = 0;\n\tscoreLabel.text = 'Game Over!\\nHigh Score: '+highscore;\n\t\/\/ Retrieve\n}\n\nfunction render() {\n}\n\nfunction killFruit(fruit) {\n\n\temitter.x = fruit.x;\n\temitter.y = fruit.y;\n\temitter.start(true, 2000, null, 4);\n\tfruit.kill();\n\tpoints = [];\n\tscore++;\n\tscoreLabel.text = 'Score: ' + score;\n}\n\n<\/script>",
        "color_scheme": "background-1",
        "padding_top": 40,
        "padding_bottom": 52
      }
    },
    "video_UVxybL": {
      "type": "video",
      "settings": {
        "heading": "Video",
        "heading_size": "h1",
        "enable_video_looping": true,
        "enable_video_autoplay": true,
        "video_url": "https:\/\/www.youtube.com\/watch?v=_9VUPq3SxOc",
        "description": "",
        "full_width": true,
        "color_scheme": "background-1",
        "padding_top": 36,
        "padding_bottom": 36,
        "twcss_video_button": "",
        "twcss_heading": "twcss-t"
      }
    }
  },
  "order": [
    "image_banner",
    "featured_collection",
    "7127aa0f-7992-428a-b35f-0465d220a392",
    "video_UVxybL"
  ]
}
